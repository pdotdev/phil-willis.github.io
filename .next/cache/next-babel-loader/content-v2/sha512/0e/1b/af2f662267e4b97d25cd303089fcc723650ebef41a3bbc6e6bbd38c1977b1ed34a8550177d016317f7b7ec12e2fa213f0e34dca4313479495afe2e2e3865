{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/philopian/Development/PROJECTS/BLOG/dev-blog/pages/learn/[slug].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from \"next/router\";\nimport ErrorPage from \"next/error\";\nimport Container from \"../../components/container\";\nimport PostBody from \"../../components/post-body\";\nimport Header from \"../../components/header\";\nimport PostHeader from \"../../components/post-header\";\nimport Layout from \"../../components/layout\";\nimport { getPostBySlug, getAllPosts } from \"../../lib/api\";\nimport PostTitle from \"../../components/post-title\";\nimport Head from \"next/head\";\nimport { CMS_NAME } from \"../../lib/constants\";\nimport markdownToHtml from \"../../lib/markdownToHtml\";\nimport { mdxToString, stringToMdx } from \"../../lib/mdxSerialization\";\nexport default function Post({\n  post,\n  morePosts,\n  preview\n}) {\n  const router = useRouter();\n\n  if (!router.isFallback && !(post !== null && post !== void 0 && post.slug)) {\n    return /*#__PURE__*/_jsxDEV(ErrorPage, {\n      statusCode: 404\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    preview: preview,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), router.isFallback ? /*#__PURE__*/_jsxDEV(PostTitle, {\n        children: \"Loading\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"mb-32\",\n          children: [/*#__PURE__*/_jsxDEV(Head, {\n            children: /*#__PURE__*/_jsxDEV(\"title\", {\n              children: [post.title, \" | Next.js Blog Example with \", CMS_NAME]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PostHeader, {\n            title: post.title,\n            coverImage: post.coverImage,\n            date: post.date,\n            author: post.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PostBody, {\n            children: [\" \", stringToMdx(post.content), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\nexport async function getStaticProps({\n  params\n}) {\n  const post = getPostBySlug(params.slug, [\"title\", \"date\", \"slug\", \"author\", \"content\", \"ogImage\", \"coverImage\"]);\n  const content = await mdxToString(post.content || \"\");\n  return {\n    props: {\n      post: _objectSpread(_objectSpread({}, post), {}, {\n        content\n      })\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const posts = getAllPosts([\"slug\"]);\n  return {\n    paths: posts.map(post => {\n      return {\n        params: {\n          slug: post.slug\n        }\n      };\n    }),\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/philopian/Development/PROJECTS/BLOG/dev-blog/pages/learn/[slug].js"],"names":["useRouter","ErrorPage","Container","PostBody","Header","PostHeader","Layout","getPostBySlug","getAllPosts","PostTitle","Head","CMS_NAME","markdownToHtml","mdxToString","stringToMdx","Post","post","morePosts","preview","router","isFallback","slug","title","coverImage","date","author","content","getStaticProps","params","props","getStaticPaths","posts","paths","map","fallback"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport ErrorPage from \"next/error\";\nimport Container from \"../../components/container\";\nimport PostBody from \"../../components/post-body\";\nimport Header from \"../../components/header\";\nimport PostHeader from \"../../components/post-header\";\nimport Layout from \"../../components/layout\";\nimport { getPostBySlug, getAllPosts } from \"../../lib/api\";\nimport PostTitle from \"../../components/post-title\";\nimport Head from \"next/head\";\nimport { CMS_NAME } from \"../../lib/constants\";\nimport markdownToHtml from \"../../lib/markdownToHtml\";\n\nimport { mdxToString, stringToMdx } from \"../../lib/mdxSerialization\";\n\nexport default function Post({ post, morePosts, preview }) {\n  const router = useRouter();\n  if (!router.isFallback && !post?.slug) {\n    return <ErrorPage statusCode={404} />;\n  }\n  return (\n    <Layout preview={preview}>\n      <Container>\n        <Header />\n        {router.isFallback ? (\n          <PostTitle>Loadingâ€¦</PostTitle>\n        ) : (\n          <>\n            <article className=\"mb-32\">\n              <Head>\n                <title>\n                  {post.title} | Next.js Blog Example with {CMS_NAME}\n                </title>\n              </Head>\n              <PostHeader title={post.title} coverImage={post.coverImage} date={post.date} author={post.author} />\n              <PostBody> {stringToMdx(post.content)} </PostBody>\n            </article>\n          </>\n        )}\n      </Container>\n    </Layout>\n  );\n}\n\nexport async function getStaticProps({ params }) {\n  const post = getPostBySlug(params.slug, [\"title\", \"date\", \"slug\", \"author\", \"content\", \"ogImage\", \"coverImage\"]);\n  const content = await mdxToString(post.content || \"\");\n\n  return {\n    props: {\n      post: {\n        ...post,\n        content,\n      },\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  const posts = getAllPosts([\"slug\"]);\n\n  return {\n    paths: posts.map((post) => {\n      return {\n        params: {\n          slug: post.slug,\n        },\n      };\n    }),\n    fallback: false,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}