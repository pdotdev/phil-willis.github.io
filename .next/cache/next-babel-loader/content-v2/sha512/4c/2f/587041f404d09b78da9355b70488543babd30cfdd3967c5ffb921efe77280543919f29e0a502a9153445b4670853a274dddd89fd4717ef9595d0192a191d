{"ast":null,"code":"import fs from \"fs\";\nimport { join } from \"path\";\nimport matter from \"gray-matter\";\nconst postsDirectory = join(process.cwd(), \"_posts\");\nexport function getSlugs() {\n  return fs.readdirSync(postsDirectory).map(d => d.replace(/\\.mdx$/, \"\"));\n}\nexport function getPostBySlug(slug, fields = []) {\n  const file = join(postsDirectory, `${slug}.mdx`);\n  const fileContents = fs.readFileSync(file, \"utf8\");\n  const {\n    data,\n    content\n  } = matter(fileContents);\n  const items = {};\n  fields.forEach(field => {\n    if (field == \"slug\") {\n      items[field] = slug;\n    }\n\n    if (field == \"content\") {\n      items[field] = content;\n    }\n\n    if (data[field]) {\n      items[field] = data[field];\n    }\n  });\n  return items;\n}\nexport function getAllPosts(fields = []) {\n  const slugs = getSlugs();\n  const posts = slugs.map(slug => getPostBySlug(slug, fields)) // sort posts by date in descending order\n  .sort((post1, post2) => post1.date > post2.date ? \"-1\" : \"1\");\n  return posts;\n}","map":{"version":3,"sources":["/Users/philopian/Development/PROJECTS/BLOG/dev-blog/lib/api.js"],"names":["fs","join","matter","postsDirectory","process","cwd","getSlugs","readdirSync","map","d","replace","getPostBySlug","slug","fields","file","fileContents","readFileSync","data","content","items","forEach","field","getAllPosts","slugs","posts","sort","post1","post2","date"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,MAAMC,cAAc,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAR,EAAD,EAAgB,QAAhB,CAA3B;AACA,OAAO,SAASC,QAAT,GAAoB;AACzB,SAAON,EAAE,CAACO,WAAH,CAAeJ,cAAf,EAA+BK,GAA/B,CAAoCC,CAAD,IAAOA,CAAC,CAACC,OAAF,CAAU,QAAV,EAAoB,EAApB,CAA1C,CAAP;AACD;AACD,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,MAAM,GAAG,EAAtC,EAA0C;AAC/C,QAAMC,IAAI,GAAGb,IAAI,CAACE,cAAD,EAAkB,GAAES,IAAK,MAAzB,CAAjB;AACA,QAAMG,YAAY,GAAGf,EAAE,CAACgB,YAAH,CAAgBF,IAAhB,EAAsB,MAAtB,CAArB;AACA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBhB,MAAM,CAACa,YAAD,CAAhC;AACA,QAAMI,KAAK,GAAG,EAAd;AACAN,EAAAA,MAAM,CAACO,OAAP,CAAgBC,KAAD,IAAW;AACxB,QAAIA,KAAK,IAAI,MAAb,EAAqB;AACnBF,MAAAA,KAAK,CAACE,KAAD,CAAL,GAAeT,IAAf;AACD;;AACD,QAAIS,KAAK,IAAI,SAAb,EAAwB;AACtBF,MAAAA,KAAK,CAACE,KAAD,CAAL,GAAeH,OAAf;AACD;;AACD,QAAID,IAAI,CAACI,KAAD,CAAR,EAAiB;AACfF,MAAAA,KAAK,CAACE,KAAD,CAAL,GAAeJ,IAAI,CAACI,KAAD,CAAnB;AACD;AACF,GAVD;AAWA,SAAOF,KAAP;AACD;AACD,OAAO,SAASG,WAAT,CAAqBT,MAAM,GAAG,EAA9B,EAAkC;AACvC,QAAMU,KAAK,GAAGjB,QAAQ,EAAtB;AACA,QAAMkB,KAAK,GAAGD,KAAK,CAChBf,GADW,CACNI,IAAD,IAAUD,aAAa,CAACC,IAAD,EAAOC,MAAP,CADhB,EAEZ;AAFY,GAGXY,IAHW,CAGN,CAACC,KAAD,EAAQC,KAAR,KAAmBD,KAAK,CAACE,IAAN,GAAaD,KAAK,CAACC,IAAnB,GAA0B,IAA1B,GAAiC,GAH9C,CAAd;AAIA,SAAOJ,KAAP;AACD","sourcesContent":["import fs from \"fs\";\nimport { join } from \"path\";\nimport matter from \"gray-matter\";\nconst postsDirectory = join(process.cwd(), \"_posts\");\nexport function getSlugs() {\n  return fs.readdirSync(postsDirectory).map((d) => d.replace(/\\.mdx$/, \"\"));\n}\nexport function getPostBySlug(slug, fields = []) {\n  const file = join(postsDirectory, `${slug}.mdx`);\n  const fileContents = fs.readFileSync(file, \"utf8\");\n  const { data, content } = matter(fileContents);\n  const items = {};\n  fields.forEach((field) => {\n    if (field == \"slug\") {\n      items[field] = slug;\n    }\n    if (field == \"content\") {\n      items[field] = content;\n    }\n    if (data[field]) {\n      items[field] = data[field];\n    }\n  });\n  return items;\n}\nexport function getAllPosts(fields = []) {\n  const slugs = getSlugs();\n  const posts = slugs\n    .map((slug) => getPostBySlug(slug, fields))\n    // sort posts by date in descending order\n    .sort((post1, post2) => (post1.date > post2.date ? \"-1\" : \"1\"));\n  return posts;\n}\n"]},"metadata":{},"sourceType":"module"}